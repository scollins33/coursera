#BlueJ class context
comment0.target=CSVMax
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ hottestInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=void\ testFileWithColdestTemperature()
comment11.params=
comment11.target=void\ testFileWithLowestHumidity()
comment12.params=str
comment12.target=double\ giveDouble(java.lang.String)
comment13.params=parser
comment13.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment14.params=
comment14.target=void\ testAvg()
comment15.params=parser\ threshold
comment15.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment16.params=
comment16.target=void\ testAvgHumid()
comment2.params=
comment2.target=void\ testHottest()
comment3.params=
comment3.target=org.apache.commons.csv.CSVRecord\ hottestInDir()
comment4.params=
comment4.target=void\ testManyDays()
comment5.params=largest\ currentLargest
comment5.target=org.apache.commons.csv.CSVRecord\ getLargestRecord(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.params=thisRecord\ currentSmallest\ type
comment6.target=org.apache.commons.csv.CSVRecord\ getSmallestRecord(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment7.params=parser\ targetType
comment7.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment8.params=
comment8.target=void\ testColdestInFile()
comment9.params=desiredType
comment9.target=java.io.File\ fileWithLowest(java.lang.String)
numComments=17
